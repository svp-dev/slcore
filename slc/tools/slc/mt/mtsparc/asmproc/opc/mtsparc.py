# This file was generated by decode.py. Do not edit!
# For each instruction the information available is:'
# re_parser, input_regs, output_regs, double_regs, long_latency, delayed, extra_phy_inputs, extra_phy_outputs'
import re
class insn_metadata(object):
    def __init__(self, info):
        self.inputs, self.outputs, self.double_regs, self.long_latency, self.delayed, self.extra_inputs, self.extra_outputs, self.immediates, self.is_branch, self.is_condbranch = info

reg = r"""(\$[lgsd]?f?\d+|%(?:sp|fp|[ilog][0-7]|[rf]\d+))"""
imm = r"""([^%$]\S*|%(?:(?:hi|lo)x?|hh|hm|lm|h44|m44|uhi|ulo|(?:tgd|tldm|tie)_(?:hi22|lo10)|(?:tldo|tle)_(?:hix22|lox10))\([^)]+\))"""
re000 = re.compile(r'''\s*''' + imm + r'''\s*$''')
re001 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*$''')
re002 = re.compile(r'''\s*$''')
re003 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*$''')
re004 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*(\dx(\d|[a-f])+|\d+)\s*,\s*''' + reg + r'''\s*$''')
re005 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*(\dx(\d|[a-f])+|\d+)\s*,\s*''' + reg + r'''\s*$''')
re006 = re.compile(r'''\s*(?:)\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*$''')
re007 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*''' + reg + r'''\s*$''')
re008 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*,\s*''' + reg + r'''\s*$''')
re009 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*,\s*''' + reg + r'''\s*$''')
re010 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*''' + reg + r'''\s*$''')
re011 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*\]\s*,\s*''' + reg + r'''\s*$''')
re012 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%c\d+\S*\s*$''')
re013 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*,\s*%c\d+\S*\s*$''')
re014 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*,\s*%c\d+\S*\s*$''')
re015 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%c\d+\S*\s*$''')
re016 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*\]\s*,\s*%c\d+\S*\s*$''')
re017 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*$''')
re018 = re.compile(r'''\s*''' + reg + r'''\s*$''')
re019 = re.compile(r'''\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*$''')
re020 = re.compile(r'''\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*$''')
re021 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%fsr\S*\s*$''')
re022 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*,\s*%fsr\S*\s*$''')
re023 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*,\s*%fsr\S*\s*$''')
re024 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%fsr\S*\s*$''')
re025 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*\]\s*,\s*%fsr\S*\s*$''')
re026 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%csr\S*\s*$''')
re027 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*,\s*%csr\S*\s*$''')
re028 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*,\s*%csr\S*\s*$''')
re029 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*,\s*%csr\S*\s*$''')
re030 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*\]\s*,\s*%csr\S*\s*$''')
re031 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*$''')
re032 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*%asr\S*\s*$''')
re033 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*%asr\S*\s*$''')
re034 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*%y\S*\s*$''')
re035 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*%y\S*\s*$''')
re036 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*%psr\S*\s*$''')
re037 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*%psr\S*\s*$''')
re038 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*%wim\S*\s*$''')
re039 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*%wim\S*\s*$''')
re040 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*%tbr\S*\s*$''')
re041 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*,\s*%tbr\S*\s*$''')
re042 = re.compile(r'''\s*%asr\d+\S*\s*,\s*''' + reg + r'''\s*$''')
re043 = re.compile(r'''\s*%y\S*\s*,\s*''' + reg + r'''\s*$''')
re044 = re.compile(r'''\s*%psr\S*\s*,\s*''' + reg + r'''\s*$''')
re045 = re.compile(r'''\s*%wim\S*\s*,\s*''' + reg + r'''\s*$''')
re046 = re.compile(r'''\s*%tbr\S*\s*,\s*''' + reg + r'''\s*$''')
re047 = re.compile(r'''\s*''' + reg + r'''\s*,\s*%asr\S*\s*$''')
re048 = re.compile(r'''\s*''' + imm + r'''\s*,\s*%asr\S*\s*$''')
re049 = re.compile(r'''\s*''' + reg + r'''\s*,\s*%y\S*\s*$''')
re050 = re.compile(r'''\s*''' + imm + r'''\s*,\s*%y\S*\s*$''')
re051 = re.compile(r'''\s*''' + reg + r'''\s*,\s*%psr\S*\s*$''')
re052 = re.compile(r'''\s*''' + imm + r'''\s*,\s*%psr\S*\s*$''')
re053 = re.compile(r'''\s*''' + reg + r'''\s*,\s*%wim\S*\s*$''')
re054 = re.compile(r'''\s*''' + imm + r'''\s*,\s*%wim\S*\s*$''')
re055 = re.compile(r'''\s*''' + reg + r'''\s*,\s*%tbr\S*\s*$''')
re056 = re.compile(r'''\s*''' + imm + r'''\s*,\s*%tbr\S*\s*$''')
re057 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re058 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re059 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re060 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re061 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re062 = re.compile(r'''\s*%c\d+\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re063 = re.compile(r'''\s*%c\d+\S*\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re064 = re.compile(r'''\s*%c\d+\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re065 = re.compile(r'''\s*%c\d+\S*\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re066 = re.compile(r'''\s*%c\d+\S*\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re067 = re.compile(r'''\s*%csr\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re068 = re.compile(r'''\s*%csr\S*\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re069 = re.compile(r'''\s*%csr\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re070 = re.compile(r'''\s*%csr\S*\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re071 = re.compile(r'''\s*%csr\S*\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re072 = re.compile(r'''\s*%fsr\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re073 = re.compile(r'''\s*%fsr\S*\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re074 = re.compile(r'''\s*%fsr\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re075 = re.compile(r'''\s*%fsr\S*\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re076 = re.compile(r'''\s*%fsr\S*\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re077 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re078 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re079 = re.compile(r'''\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re080 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re081 = re.compile(r'''\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re082 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*(\dx(\d|[a-f])+|\d+)\s*$''')
re083 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\[\s*''' + reg + r'''\s*\]\s*(\dx(\d|[a-f])+|\d+)\s*$''')
re084 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*$''')
re085 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*$''')
re086 = re.compile(r'''\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*$''')
re087 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*$''')
re088 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*$''')
re089 = re.compile(r'''\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*$''')
re090 = re.compile(r'''\s*''' + reg + r'''\s*,\s*''' + reg + r'''\s*,\s*''' + imm + r'''\s*$''')
re091 = re.compile(r'''\s*''' + imm + r'''\s*,\s*\d+\s*$''')
re092 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*,\s*\d+\s*$''')
re093 = re.compile(r'''\s*''' + reg + r'''\s*,\s*\d+\s*$''')
re094 = re.compile(r'''\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*,\s*\d+\s*$''')
re095 = re.compile(r'''\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*,\s*\d+\s*$''')
re096 = re.compile(r'''\s*%fq\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re097 = re.compile(r'''\s*%fq\S*\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re098 = re.compile(r'''\s*%fq\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re099 = re.compile(r'''\s*%fq\S*\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re100 = re.compile(r'''\s*%fq\S*\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re101 = re.compile(r'''\s*%cq\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re102 = re.compile(r'''\s*%cq\S*\s*,\s*\[\s*''' + reg + r'''\s*\]\s*$''')
re103 = re.compile(r'''\s*%cq\S*\s*,\s*\[\s*''' + reg + r'''\s*[+-]\s*''' + imm + r'''\s*\]\s*$''')
re104 = re.compile(r'''\s*%cq\S*\s*,\s*\[\s*''' + imm + r'''\s*[+-]\s*''' + reg + r'''\s*\]\s*$''')
re105 = re.compile(r'''\s*%cq\S*\s*,\s*\[\s*''' + imm + r'''\s*\]\s*$''')
re106 = re.compile(r'''\s*%wim\S*\s*,\s*''' + imm + r'''\s*,\s*''' + reg + r'''\s*$''')
form000 = insn_metadata(([], [], [], False, True, [], [], [0], False, True))
form001 = insn_metadata(([0, 1], [2], [], False, False, [], [], [], False, False))
form002 = insn_metadata(([], [], [], False, False, [], [], [], False, False))
form003 = insn_metadata(([0], [2], [], False, False, [], [], [1], False, False))
form004 = insn_metadata(([0, 1], [2], [], True, False, [], [], [], False, False))
form005 = insn_metadata(([0], [1], [], True, False, [], [], [], False, False))
form006 = insn_metadata(([], [1], [], False, False, [], [], [0], False, False))
form007 = insn_metadata(([0, 1], [2], [2], True, False, [], [], [], False, False))
form008 = insn_metadata(([0], [1], [1], True, False, [], [], [], False, False))
form009 = insn_metadata(([0], [2], [2], True, False, [], [], [1], False, False))
form010 = insn_metadata(([1], [2], [2], True, False, [], [], [0], False, False))
form011 = insn_metadata(([], [1], [1], True, False, [], [], [0], False, False))
form012 = insn_metadata(([0, 1], [], [], True, False, [], [], [], False, False))
form013 = insn_metadata(([0], [], [], True, False, [], [], [], False, False))
form014 = insn_metadata(([0], [], [], True, False, [], [], [1], False, False))
form015 = insn_metadata(([1], [], [], True, False, [], [], [0], False, False))
form016 = insn_metadata(([], [], [], True, False, [], [], [0], False, False))
form017 = insn_metadata(([0], [1], [], False, False, [], [], [], False, False))
form018 = insn_metadata(([], [0], [], False, False, [], [], [], False, False))
form019 = insn_metadata(([0, 1], [2], [0, 1, 2], True, False, [], [], [], False, False))
form020 = insn_metadata(([1], [2], [], False, False, [], [], [0], False, False))
form021 = insn_metadata(([0, 1], [], [0], False, False, [], [], [], False, False))
form022 = insn_metadata(([0, 1], [1], [], False, False, [], [], [], False, False))
form023 = insn_metadata(([1], [1], [], False, False, [], [], [0], False, False))
form024 = insn_metadata(([0], [2], [], True, False, [], [], [1], False, False))
form025 = insn_metadata(([1], [2], [], True, False, [], [], [0], False, False))
form026 = insn_metadata(([], [1], [], True, False, [], [], [0], False, False))
form027 = insn_metadata(([0], [], [], False, False, [], [], [], False, False))
form028 = insn_metadata(([], [0], [], True, False, [], [], [], False, False))
form029 = insn_metadata(([0, 1], [2], [1, 2], True, False, [], [], [], False, False))
form030 = insn_metadata(([0, 1], [], [], False, False, [], [], [], False, False))
form031 = insn_metadata(([0], [], [], False, False, [], [], [1], False, False))
form032 = insn_metadata(([], [], [], False, False, [], [], [0], False, False))
form033 = insn_metadata(([0], [1], [0, 1], True, False, [], [], [], False, False))
form034 = insn_metadata(([0, 1], [2], [], True, False, [], ['y'], [], False, False))
form035 = insn_metadata(([0], [2], [], True, False, [], ['y'], [1], False, False))
form036 = insn_metadata(([1], [2], [], True, False, [], ['y'], [0], False, False))
form037 = insn_metadata(([0, 1, 2], [], [], False, False, [], [], [], False, False))
form038 = insn_metadata(([0, 1], [], [], False, False, [], [], [2], False, False))
form039 = insn_metadata(([0, 2], [], [], False, False, [], [], [1], False, False))
form040 = insn_metadata(([1], [], [], False, False, [], [], [0], False, False))
form041 = insn_metadata(([0], [0], [], False, False, [], [], [], False, False))
form042 = insn_metadata(([0, 1], [], [0, 1], True, False, [], [], [], False, False))
form043 = insn_metadata(([0, 1], [2], [], True, False, ['y'], [], [], False, False))
form044 = insn_metadata(([0], [2], [], True, False, ['y'], [], [1], False, False))
form045 = insn_metadata(([1], [2], [], True, False, ['y'], [], [0], False, False))
form046 = insn_metadata(([0, 1], [2], [], False, True, [], [], [], True, False))
form047 = insn_metadata(([0], [1], [], False, True, [], [], [], True, False))
form048 = insn_metadata(([], [1], [], False, True, [], [], [0], True, False))
form049 = insn_metadata(([0], [2], [], False, True, [], [], [1], True, False))
form050 = insn_metadata(([1], [2], [], False, True, [], [], [0], True, False))
form051 = insn_metadata(([0], [1], [1], False, False, [], [], [], False, False))
form052 = insn_metadata(([], [], [], False, True, [], [], [0], True, False))
form053 = insn_metadata(([0, 1, 2], [], [0], False, False, [], [], [], False, False))
form054 = insn_metadata(([0], [1], [0], False, False, [], [], [], False, False))
form055 = insn_metadata(([], [], [], False, True, [15], [], [], True, False))
form056 = insn_metadata(([], [], [], True, False, [], [], [], False, False))
form057 = insn_metadata(([0], [1], [0, 1], False, False, [], [], [], False, False))
form058 = insn_metadata(([], [], [], False, True, [31], [], [], True, False))
form059 = insn_metadata(([], [], [], False, True, [], [15], [0], True, False))
form060 = insn_metadata(([0, 1], [], [], False, True, [], [15], [], True, False))
form061 = insn_metadata(([0], [], [], False, True, [], [15], [], True, False))
form062 = insn_metadata(([0], [], [], False, True, [], [15], [1], True, False))
form063 = insn_metadata(([1], [], [], False, True, [], [15], [0], True, False))
form064 = insn_metadata(([0, 1], [], [], False, True, [], [], [], True, False))
form065 = insn_metadata(([0], [], [], False, True, [], [], [], True, False))
form066 = insn_metadata(([0], [], [], False, True, [], [], [1], True, False))
form067 = insn_metadata(([1], [], [], False, True, [], [], [0], True, False))
form068 = insn_metadata(([0, 1], [], [1], True, False, [], [], [], False, False))
form069 = insn_metadata(([0, 1], [], [0], False, False, [], [], [2], False, False))
form070 = insn_metadata(([0, 2], [], [0], False, False, [], [], [1], False, False))
form071 = insn_metadata(([0], [], [0], False, False, [], [], [1], False, False))
form072 = insn_metadata(([0], [], [], False, False, [], [], [], True, False))
insninfo = {
'add' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'addcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'addx' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'addxcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'allocate' : [
      (re018, form028),
      (re017, form005),
      (re020, form026),
      ],
'allocates' : [
      (re018, form028),
      (re017, form005),
      (re020, form026),
      ],
'allocatex' : [
      (re018, form028),
      (re017, form005),
      (re020, form026),
      ],
'and' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'andcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'andn' : [
      (re001, form001),
      (re003, form003),
      ],
'andncc' : [
      (re001, form001),
      (re003, form003),
      ],
'b' : [
      (re000, form052),
      ],
'b,a' : [
      (re000, form052),
      ],
'ba' : [
      (re000, form000),
      ],
'ba,a' : [
      (re000, form000),
      ],
'bcc' : [
      (re000, form000),
      ],
'bcc,a' : [
      (re000, form000),
      ],
'bclr' : [
      (re017, form022),
      (re020, form023),
      ],
'bcs' : [
      (re000, form000),
      ],
'bcs,a' : [
      (re000, form000),
      ],
'be' : [
      (re000, form000),
      ],
'be,a' : [
      (re000, form000),
      ],
'beq' : [
      (re000, form000),
      ],
'beq,a' : [
      (re000, form000),
      ],
'bg' : [
      (re000, form000),
      ],
'bg,a' : [
      (re000, form000),
      ],
'bge' : [
      (re000, form000),
      ],
'bge,a' : [
      (re000, form000),
      ],
'bgeu' : [
      (re000, form000),
      ],
'bgeu,a' : [
      (re000, form000),
      ],
'bgt' : [
      (re000, form000),
      ],
'bgt,a' : [
      (re000, form000),
      ],
'bgu' : [
      (re000, form000),
      ],
'bgu,a' : [
      (re000, form000),
      ],
'bl' : [
      (re000, form000),
      ],
'bl,a' : [
      (re000, form000),
      ],
'ble' : [
      (re000, form000),
      ],
'ble,a' : [
      (re000, form000),
      ],
'bleu' : [
      (re000, form000),
      ],
'bleu,a' : [
      (re000, form000),
      ],
'blt' : [
      (re000, form000),
      ],
'blt,a' : [
      (re000, form000),
      ],
'blu' : [
      (re000, form000),
      ],
'blu,a' : [
      (re000, form000),
      ],
'bn' : [
      (re000, form000),
      ],
'bn,a' : [
      (re000, form000),
      ],
'bne' : [
      (re000, form000),
      ],
'bne,a' : [
      (re000, form000),
      ],
'bneg' : [
      (re000, form000),
      ],
'bneg,a' : [
      (re000, form000),
      ],
'bnz' : [
      (re000, form000),
      ],
'bnz,a' : [
      (re000, form000),
      ],
'bpos' : [
      (re000, form000),
      ],
'bpos,a' : [
      (re000, form000),
      ],
'break' : [
      (re018, form027),
      (re000, form032),
      ],
'bset' : [
      (re017, form022),
      (re020, form023),
      ],
'btog' : [
      (re017, form022),
      (re020, form023),
      ],
'btst' : [
      (re017, form030),
      (re020, form040),
      ],
'bvc' : [
      (re000, form000),
      ],
'bvc,a' : [
      (re000, form000),
      ],
'bvs' : [
      (re000, form000),
      ],
'bvs,a' : [
      (re000, form000),
      ],
'bz' : [
      (re000, form000),
      ],
'bz,a' : [
      (re000, form000),
      ],
'call' : [
      (re000, form059),
      (re091, form059),
      (re087, form060),
      (re092, form060),
      (re018, form061),
      (re093, form061),
      (re088, form062),
      (re094, form062),
      (re089, form063),
      (re095, form063),
      (re000, form059),
      (re091, form059),
      (re018, form061),
      (re093, form061),
      ],
'clr' : [
      (re018, form018),
      (re018, form018),
      (re077, form030),
      (re078, form027),
      (re079, form031),
      (re080, form040),
      (re081, form032),
      (re078, form027),
      ],
'clrb' : [
      (re077, form030),
      (re078, form027),
      (re079, form031),
      (re080, form040),
      (re081, form032),
      (re078, form027),
      ],
'clrh' : [
      (re077, form030),
      (re078, form027),
      (re079, form031),
      (re080, form040),
      (re081, form032),
      (re078, form027),
      ],
'cmp' : [
      (re017, form030),
      (re031, form031),
      ],
'cpop1' : [
      (re007, form001),
      ],
'cpop2' : [
      (re007, form001),
      ],
'create' : [
      (re017, form005),
      ],
'cred' : [
      (re020, form015),
      ],
'crei' : [
      (re017, form012),
      ],
'dec' : [
      (re018, form041),
      (re020, form023),
      ],
'deccc' : [
      (re018, form041),
      (re020, form023),
      ],
'detach' : [
      (re018, form027),
      ],
'f_alloc' : [
      (re018, form018),
      ],
'f_break' : [
      (re002, form002),
      (re018, form027),
      ],
'f_create' : [
      (re017, form012),
      (re001, form004),
      (re031, form014),
      (re003, form024),
      ],
'f_fence' : [
      (re017, form030),
      (re001, form001),
      (re031, form031),
      (re003, form003),
      (re018, form027),
      (re000, form032),
      ],
'f_freesrb' : [
      (re018, form027),
      ],
'f_get_blockindex' : [
      (re017, form017),
      (re018, form018),
      ],
'f_get_blocksize' : [
      (re017, form017),
      (re018, form018),
      ],
'f_get_gridsize' : [
      (re017, form017),
      (re018, form018),
      ],
'f_mapg' : [
      (re001, form001),
      (re003, form003),
      (re017, form030),
      (re031, form031),
      ],
'f_maphtg' : [
      (re001, form001),
      (re003, form003),
      (re017, form030),
      (re031, form031),
      ],
'f_set_blocksize' : [
      (re017, form030),
      (re031, form031),
      ],
'f_set_gridsize' : [
      (re017, form030),
      (re031, form031),
      ],
'fabss' : [
      (re017, form017),
      ],
'faddd' : [
      (re001, form029),
      ],
'faddq' : [
      (re001, form019),
      ],
'fadds' : [
      (re001, form004),
      ],
'faddx' : [
      (re001, form019),
      ],
'fb' : [
      (re000, form000),
      ],
'fb,a' : [
      (re000, form000),
      ],
'fba' : [
      (re000, form000),
      ],
'fba,a' : [
      (re000, form000),
      ],
'fbe' : [
      (re000, form000),
      ],
'fbe,a' : [
      (re000, form000),
      ],
'fbg' : [
      (re000, form000),
      ],
'fbg,a' : [
      (re000, form000),
      ],
'fbge' : [
      (re000, form000),
      ],
'fbge,a' : [
      (re000, form000),
      ],
'fbl' : [
      (re000, form000),
      ],
'fbl,a' : [
      (re000, form000),
      ],
'fble' : [
      (re000, form000),
      ],
'fble,a' : [
      (re000, form000),
      ],
'fblg' : [
      (re000, form000),
      ],
'fblg,a' : [
      (re000, form000),
      ],
'fbn' : [
      (re000, form000),
      ],
'fbn,a' : [
      (re000, form000),
      ],
'fbne' : [
      (re000, form000),
      ],
'fbne,a' : [
      (re000, form000),
      ],
'fbnz' : [
      (re000, form000),
      ],
'fbnz,a' : [
      (re000, form000),
      ],
'fbo' : [
      (re000, form000),
      ],
'fbo,a' : [
      (re000, form000),
      ],
'fbu' : [
      (re000, form000),
      ],
'fbu,a' : [
      (re000, form000),
      ],
'fbue' : [
      (re000, form000),
      ],
'fbue,a' : [
      (re000, form000),
      ],
'fbug' : [
      (re000, form000),
      ],
'fbug,a' : [
      (re000, form000),
      ],
'fbuge' : [
      (re000, form000),
      ],
'fbuge,a' : [
      (re000, form000),
      ],
'fbul' : [
      (re000, form000),
      ],
'fbul,a' : [
      (re000, form000),
      ],
'fbule' : [
      (re000, form000),
      ],
'fbule,a' : [
      (re000, form000),
      ],
'fbz' : [
      (re000, form000),
      ],
'fbz,a' : [
      (re000, form000),
      ],
'fcmpd' : [
      (re017, form068),
      ],
'fcmped' : [
      (re017, form068),
      ],
'fcmpeq' : [
      (re017, form042),
      ],
'fcmpes' : [
      (re017, form012),
      ],
'fcmpex' : [
      (re017, form042),
      ],
'fcmpq' : [
      (re017, form042),
      ],
'fcmps' : [
      (re017, form012),
      ],
'fcmpx' : [
      (re017, form042),
      ],
'fdivd' : [
      (re001, form029),
      ],
'fdivq' : [
      (re001, form019),
      ],
'fdivs' : [
      (re001, form004),
      ],
'fdivx' : [
      (re001, form019),
      ],
'fdmulq' : [
      (re001, form029),
      ],
'fdmulx' : [
      (re001, form029),
      ],
'fdtoi' : [
      (re017, form054),
      ],
'fdtoq' : [
      (re017, form057),
      ],
'fdtos' : [
      (re017, form054),
      ],
'fgets' : [
      (re003, form024),
      ],
'fitod' : [
      (re017, form051),
      ],
'fitoq' : [
      (re017, form051),
      ],
'fitos' : [
      (re017, form017),
      ],
'flush' : [
      (re087, form012),
      (re018, form013),
      (re018, form013),
      (re000, form016),
      (re088, form014),
      (re089, form015),
      ],
'fmovs' : [
      (re017, form017),
      ],
'fmuld' : [
      (re001, form029),
      ],
'fmulq' : [
      (re001, form019),
      ],
'fmuls' : [
      (re001, form004),
      ],
'fmulx' : [
      (re001, form019),
      ],
'fnegs' : [
      (re017, form017),
      ],
'fprintd' : [
      (re017, form030),
      ],
'fprintq' : [
      (re017, form021),
      ],
'fprints' : [
      (re017, form030),
      ],
'fputg' : [
      (re090, form038),
      ],
'fputs' : [
      (re090, form038),
      ],
'fqtod' : [
      (re017, form057),
      ],
'fqtoi' : [
      (re017, form054),
      ],
'fqtos' : [
      (re017, form054),
      ],
'fsmuld' : [
      (re001, form007),
      ],
'fsqrtd' : [
      (re017, form033),
      ],
'fsqrtq' : [
      (re017, form033),
      ],
'fsqrts' : [
      (re017, form005),
      ],
'fsqrtx' : [
      (re017, form033),
      ],
'fstod' : [
      (re017, form051),
      ],
'fstoi' : [
      (re017, form017),
      ],
'fstoq' : [
      (re017, form051),
      ],
'fsubd' : [
      (re001, form029),
      ],
'fsubq' : [
      (re001, form019),
      ],
'fsubs' : [
      (re001, form004),
      ],
'fsubx' : [
      (re001, form019),
      ],
'getcid' : [
      (re018, form018),
      ],
'getfid' : [
      (re018, form018),
      ],
'getpid' : [
      (re018, form018),
      ],
'gets' : [
      (re003, form024),
      ],
'gettid' : [
      (re018, form018),
      ],
'iflush' : [
      (re087, form012),
      (re018, form013),
      (re018, form013),
      (re000, form016),
      (re088, form014),
      (re089, form015),
      ],
'inc' : [
      (re018, form041),
      (re020, form023),
      ],
'inccc' : [
      (re018, form041),
      (re020, form023),
      ],
'jmp' : [
      (re087, form064),
      (re018, form065),
      (re088, form066),
      (re089, form067),
      (re000, form052),
      (re018, form065),
      ],
'jmpl' : [
      (re084, form046),
      (re017, form047),
      (re017, form047),
      (re020, form048),
      (re085, form049),
      (re086, form050),
      ],
'launch' : [
      (re018, form072),
      ],
'ld' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      (re021, form012),
      (re022, form013),
      (re023, form014),
      (re024, form015),
      (re025, form016),
      (re022, form013),
      (re012, form012),
      (re013, form013),
      (re014, form014),
      (re015, form015),
      (re016, form016),
      (re013, form013),
      (re026, form012),
      (re027, form013),
      (re028, form014),
      (re029, form015),
      (re030, form016),
      (re027, form013),
      ],
'lda' : [
      (re004, form004),
      (re005, form005),
      ],
'ldbp' : [
      (re018, form018),
      ],
'ldd' : [
      (re007, form007),
      (re008, form008),
      (re009, form009),
      (re010, form010),
      (re011, form011),
      (re008, form008),
      (re007, form007),
      (re008, form008),
      (re009, form009),
      (re010, form010),
      (re011, form011),
      (re008, form008),
      (re012, form012),
      (re013, form013),
      (re014, form014),
      (re015, form015),
      (re016, form016),
      (re013, form013),
      ],
'ldda' : [
      (re004, form004),
      (re005, form005),
      ],
'ldfp' : [
      (re018, form018),
      ],
'ldsb' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'ldsba' : [
      (re004, form004),
      (re005, form005),
      ],
'ldsh' : [
      (re008, form005),
      (re007, form004),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'ldsha' : [
      (re004, form004),
      (re005, form005),
      ],
'ldstub' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'ldstuba' : [
      (re004, form004),
      (re005, form005),
      ],
'ldub' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'lduba' : [
      (re004, form004),
      (re005, form005),
      ],
'lduh' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'lduha' : [
      (re004, form004),
      (re005, form005),
      ],
'mov' : [
      (re032, form030),
      (re033, form031),
      (re034, form030),
      (re035, form031),
      (re036, form030),
      (re037, form031),
      (re038, form030),
      (re039, form031),
      (re040, form030),
      (re041, form031),
      (re042, form018),
      (re043, form018),
      (re044, form018),
      (re045, form018),
      (re046, form018),
      (re047, form027),
      (re048, form032),
      (re047, form027),
      (re049, form027),
      (re050, form032),
      (re049, form027),
      (re051, form027),
      (re052, form032),
      (re051, form027),
      (re053, form027),
      (re054, form032),
      (re053, form027),
      (re055, form027),
      (re056, form032),
      (re055, form027),
      (re017, form017),
      (re020, form006),
      (re017, form017),
      (re017, form017),
      ],
'mulscc' : [
      (re001, form043),
      (re003, form044),
      ],
'neg' : [
      (re017, form017),
      (re018, form041),
      ],
'nop' : [
      (re002, form002),
      ],
'not' : [
      (re017, form017),
      (re018, form041),
      ],
'or' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'orcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'orn' : [
      (re001, form001),
      (re003, form003),
      ],
'orncc' : [
      (re001, form001),
      (re003, form003),
      ],
'print' : [
      (re017, form030),
      (re031, form031),
      ],
'putg' : [
      (re090, form038),
      ],
'puts' : [
      (re090, form038),
      ],
'r_allocsrb' : [
      (re017, form017),
      (re020, form006),
      ],
'r_read' : [
      (re017, form005),
      ],
'r_write' : [
      (re017, form012),
      (re001, form004),
      (re031, form014),
      (re003, form024),
      ],
'rd' : [
      (re042, form018),
      (re043, form018),
      (re044, form018),
      (re045, form018),
      (re106, form006),
      (re046, form018),
      ],
'release' : [
      (re018, form027),
      ],
'restore' : [
      (re001, form001),
      (re002, form002),
      (re003, form003),
      (re002, form002),
      ],
'ret' : [
      (re002, form055),
      ],
'retl' : [
      (re002, form058),
      ],
'rett' : [
      (re087, form064),
      (re018, form065),
      (re088, form066),
      (re089, form067),
      (re000, form052),
      (re000, form052),
      (re018, form065),
      ],
'save' : [
      (re001, form001),
      (re003, form003),
      (re002, form002),
      ],
'sdiv' : [
      (re001, form043),
      (re003, form044),
      (re019, form045),
      ],
'sdivcc' : [
      (re001, form043),
      (re003, form044),
      (re019, form045),
      ],
'set' : [
      (re006, form006),
      ],
'setblock' : [
      (re017, form030),
      (re031, form031),
      ],
'sethi' : [
      (re020, form006),
      ],
'setarg' : [
      (re017, form030),
      (re031, form031),
      ],
'setlimit' : [
      (re017, form030),
      (re031, form031),
      ],
'setstart' : [
      (re017, form030),
      (re031, form031),
      ],
'setstep' : [
      (re017, form030),
      (re031, form031),
      ],
'setthread' : [
      (re017, form030),
      (re031, form031),
      ],
'sll' : [
      (re001, form001),
      (re003, form003),
      ],
'smul' : [
      (re001, form034),
      (re003, form035),
      (re019, form036),
      ],
'smulcc' : [
      (re001, form034),
      (re003, form035),
      (re019, form036),
      ],
'spill' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'spilld' : [
      (re057, form053),
      (re058, form021),
      (re059, form069),
      (re060, form070),
      (re061, form071),
      (re058, form021),
      ],
'sra' : [
      (re001, form001),
      (re003, form003),
      ],
'srl' : [
      (re001, form001),
      (re003, form003),
      ],
'st' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      (re062, form030),
      (re063, form027),
      (re064, form031),
      (re065, form040),
      (re066, form032),
      (re063, form027),
      (re067, form030),
      (re068, form027),
      (re069, form031),
      (re070, form040),
      (re071, form032),
      (re068, form027),
      (re072, form030),
      (re073, form027),
      (re074, form031),
      (re075, form040),
      (re076, form032),
      (re073, form027),
      ],
'sta' : [
      (re082, form037),
      (re083, form030),
      ],
'stb' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stba' : [
      (re082, form037),
      (re083, form030),
      ],
'stbar' : [
      (re002, form056),
      ],
'std' : [
      (re057, form053),
      (re058, form021),
      (re059, form069),
      (re060, form070),
      (re061, form071),
      (re058, form021),
      (re096, form030),
      (re097, form027),
      (re098, form031),
      (re099, form040),
      (re100, form032),
      (re097, form027),
      (re057, form053),
      (re058, form021),
      (re059, form069),
      (re060, form070),
      (re061, form071),
      (re058, form021),
      (re101, form030),
      (re102, form027),
      (re103, form031),
      (re104, form040),
      (re105, form032),
      (re102, form027),
      (re062, form030),
      (re063, form027),
      (re064, form031),
      (re065, form040),
      (re066, form032),
      (re063, form027),
      ],
'stda' : [
      (re082, form053),
      (re083, form021),
      ],
'sth' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stha' : [
      (re082, form037),
      (re083, form030),
      ],
'stsb' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stsba' : [
      (re082, form037),
      (re083, form030),
      ],
'stsh' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stsha' : [
      (re082, form037),
      (re083, form030),
      ],
'stub' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stuba' : [
      (re082, form037),
      (re083, form030),
      ],
'stuh' : [
      (re057, form037),
      (re058, form030),
      (re059, form038),
      (re060, form039),
      (re061, form031),
      (re058, form030),
      ],
'stuha' : [
      (re082, form037),
      (re083, form030),
      ],
'sub' : [
      (re001, form001),
      (re003, form003),
      ],
'subcc' : [
      (re001, form001),
      (re003, form003),
      ],
'subx' : [
      (re001, form001),
      (re003, form003),
      ],
'subxcc' : [
      (re001, form001),
      (re003, form003),
      ],
'swap' : [
      (re007, form004),
      (re008, form005),
      (re009, form024),
      (re010, form025),
      (re011, form026),
      (re008, form005),
      ],
'swapa' : [
      (re004, form004),
      (re005, form005),
      ],
'sync' : [
      (re017, form005),
      ],
't_allochtg' : [
      (re001, form001),
      (re003, form003),
      (re001, form004),
      (re003, form024),
      ],
't_end' : [
      (re002, form002),
      ],
't_freehtg' : [
      (re018, form027),
      ],
't_get_fid' : [
      (re018, form018),
      ],
't_get_pindex' : [
      (re018, form018),
      ],
't_get_tid' : [
      (re018, form018),
      ],
't_wait' : [
      (re002, form002),
      (re018, form027),
      ],
'taddcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'taddcctv' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'tst' : [
      (re018, form027),
      (re018, form027),
      (re018, form027),
      ],
'tsubcc' : [
      (re001, form001),
      (re003, form003),
      ],
'tsubcctv' : [
      (re001, form001),
      (re003, form003),
      ],
'udiv' : [
      (re001, form043),
      (re003, form044),
      (re019, form045),
      ],
'udivcc' : [
      (re001, form043),
      (re003, form044),
      (re019, form045),
      ],
'umul' : [
      (re001, form034),
      (re003, form035),
      (re019, form036),
      ],
'umulcc' : [
      (re001, form034),
      (re003, form035),
      (re019, form036),
      ],
'unimp' : [
      (re000, form032),
      ],
'wr' : [
      (re032, form030),
      (re033, form031),
      (re047, form027),
      (re034, form030),
      (re035, form031),
      (re049, form027),
      (re036, form030),
      (re037, form031),
      (re051, form027),
      (re038, form030),
      (re039, form031),
      (re053, form027),
      (re040, form030),
      (re041, form031),
      (re055, form027),
      ],
'xnor' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'xnorcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'xor' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
'xorcc' : [
      (re001, form001),
      (re003, form003),
      (re019, form020),
      ],
}
